akka {
    stdout-loglevel = INFO
    loglevel = INFO
    log-config-on-start = on
    extensions = ["Akka.Cluster.Tools.PublishSubscribe.DistributedPubSubExtensionProvider, Akka.Cluster.Tools"]
    actor {
        debug {  
            receive = on 
            autoreceive = on
            lifecycle = on
            event-stream = on
            unhandled = on
        }
        provider = cluster
        deployment {
            /mediatedSender {
               router = round-robin-pool
               nr-of-instances = 10
               cluster {
                    enabled = on
                    allow-local-routes = on
                    use-role = "sender"
                    max-nr-of-instances-per-node = 1
               } 
            }
            /mediatedListener {
               router = round-robin-pool
               nr-of-instances = 10
               cluster {
                    enabled = on
                    allow-local-routes = on
                    use-role = "listener"
                    max-nr-of-instances-per-node = 5
               } 
            }
        }
    }
    remote {
        dot-netty.tcp {
            port = 4051
            hostname = localhost
        }
    }
    cluster {
        seed-nodes = ["akka.tcp://ClusterSys@localhost:4051"]
        roles = ["listener"]
        pub-sub {
          # Actor name of the mediator actor, /system/distributedPubSubMediator
          name = dermiator
        
          # Start the mediator on members tagged with this role.
          # All members are used if undefined or empty.
          role = ""
        
          # The routing logic to use for 'Send'
          # Possible values: random, round-robin, broadcast
          routing-logic = round-robin
        
          # How often the DistributedPubSubMediator should send out gossip information
          gossip-interval = 1s
        
          # Removed entries are pruned after this duration
          removed-time-to-live = 120s
        
          # Maximum number of elements to transfer in one message when synchronizing the registries.
          # Next chunk will be transferred in next round of gossip.
          max-delta-elements = 3000
        
          # The id of the dispatcher to use for DistributedPubSubMediator actors. 
          # If not specified default dispatcher is used.
          # If specified you need to define the settings of the actual dispatcher.
          use-dispatcher = ""
        }
    }
}